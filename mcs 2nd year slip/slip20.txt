Write a Java Program to implement I/O Decorator for converting uppercase letters to lower case letters.
Solution:
import java.util.Scanner;
public class CodesCracker
{
   public static void main(String[] args)
   {
      char chUpper, chLower;
      int ascii;
      Scanner scan = new Scanner(System.in);
      
      System.out.print("Enter a Character in Uppercase: ");
      chUpper = scan.next().charAt(0);
      
      ascii = chUpper;
      ascii = ascii + 32;
      chLower = (char)ascii;
      
      System.out.println("\nEquivalent Character in Lowercase = " +chLower);
   }
}
OUTPUT
C:\Users\preranabhosale \Desktop>java CodesCracker
Enter a Character in Uppercase: A
Equivalent Character in Lowercase = a

*************************************************************************************************************************
Write a python program to implement Decision Tree whether or not to play Tennis
#numpy and pandas initialization
import numpy as np
import pandas as pd
#Loading the PlayTennis data
PlayTennis = pd.read_csv("PlayTennis.csv") PlayTennis
from sklearn.preprocessing import LabelEncoder
Le = LabelEncoder()
PlayTennis['outlook'] = Le.fit_transform(PlayTennis['outlook'])
PlayTennis['temp'] = Le.fit_transform(PlayTennis['temp'])
PlayTennis['humidity'] = Le.fit_transform(PlayTennis['humidity'])
PlayTennis['windy'] = Le.fit_transform(PlayTennis['windy'])
PlayTennis['play'] = Le.fit_transform(PlayTennis['play'])
PlayTennis
#split the training data and its coresponding prediction values.
#y - holds all the decisions.
#X - holds the training data. y = PlayTennis['play'] X = PlayTennis.drop(['play'],axis=1)
# Fitting the model
from sklearn import tree
clf = tree.DecisionTreeClassifier(criterion = 'entropy')
clf = clf.fit(X, y)
# We can visualize the tree using tree.plot_tree
tree.plot_tree(clf) import graphviz dot_data = tree.export_graphviz(clf, out_file=None) graph = graphviz.Source(dot_data) graph



â€ƒ
