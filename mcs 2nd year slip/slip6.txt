Write a java program to implement commond pattern to test Remote Control
Solution:

class Light {
    public void turnOn() {
        System.out.println("Light is on");
    }
    public void turnOff() {
        System.out.println("Light is off");
    }
}
// Command interface: This defines the abstract command with execute method.
interface Command {
    void execute();
}
// Concrete Command: These classes implement the Command interface and contain an instance of the Receiver.
class LightOnCommand implements Command {
    private Light light;
    
    public LightOnCommand(Light light) {
        this.light = light;
    }
    public void execute() {
        light.turnOn();
    }
}
class LightOffCommand implements Command {
    private Light light;
    public LightOffCommand(Light light) {
        this.light = light;
    }
    public void execute() {
        light.turnOff();
    }
}
// Invoker: This is the class that will use the Command objects.
class RemoteControl {
    private Command command;
    public void setCommand(Command command) {
        this.command = command;
    }
    
    public void pressButton() {
        command.execute();
    }
}

public class RemoteControlTest {
    public static void main(String[] args) {
        // Create the receiver
        Light light = new Light();
        
        // Create the concrete command objects
        LightOnCommand lightOn = new LightOnCommand(light);
        LightOffCommand lightOff = new LightOffCommand(light);
        
        // Create the invoker (remote control)
        RemoteControl remote = new RemoteControl();
        
        // Set and press the on button
        remote.setCommand(lightOn);
        remote.pressButton();
        
        // Set and press the off button
        remote.setCommand(lightOff);
        remote.pressButton();
    }
}
Output :
C:\Users\preranabhosale\Desktop\example>javac RemoteControlTest.java

C:\Users\preranabhosale\Desktop\example>java RemoteControlTest
Light is on
Light is off

**************************************************************************************************************************************

2.Write a python program to implement Polynomial Linear Regression for given dataset
# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
# Importing the dataset
datas = pd.read_csv('data.csv')
datas
# Dividing the dataset into 2 components
X = datas.iloc[:, 1:2].values
y = datas.iloc[:, 2].values
# Fitting Linear Regression to the dataset
from sklearn.linear_model import LinearRegression
lin = LinearRegression()
lin.fit(X, y)
# Fitting Polynomial Regression to the dataset
from sklearn.preprocessing import PolynomialFeatures
poly = PolynomialFeatures(degree = 4)
X_poly = poly.fit_transform(X)
poly.fit(X_poly, y)
lin2 = LinearRegression()
lin2.fit(X_poly, y)
# Visualising the Linear Regression results
plt.scatter(X, y, color = 'blue')
plt.plot(X, lin.predict(X), color = 'red')
plt.title('Linear Regression')
plt.xlabel('Temperature')
plt.ylabel('Pressure')
plt.show()
# Visualising the Polynomial Regression results
plt.scatter(X, y, color = 'blue')
plt.plot(X, lin2.predict(poly.fit_transform(X)), color = 'red')
plt.title('Polynomial Regression')
plt.xlabel('Temperature')
plt.ylabel('Pressure')
plt.show()

**************************************************************************************************************************************

3.Create a Node.js file that opens the requested file and returns the content to the client. If anything goes wrong, throw a 404 error.
var http = require('http');
var url = require('url');
var fs = require('fs');

http.createServer(function(req,res){
    var q = url.parse(req.url,true);
    var filename = "."+q.pathname;
    fs.readFile(filename,function(err,data){
        if(err){
            res.writeHead(404,{'content-type':'text/html'});
            return res.end("404 Not Found");
        }
        res.writeHead(200,{'content-type':'text/html'});
        res.write(data);
        return res.end();
    });
}).listen(8080);
