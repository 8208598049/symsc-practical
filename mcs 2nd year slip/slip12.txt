Write a Java Program to implement Decorator Pattern for interface Car to define the assemble() method and then decorate it to Sports car and Luxury Car

interface Car {
    public void assemble();
}
class BasicCar implements Car {
    @Override
    public void assemble() {
        System.out.print("Basic Car.");
    }
}
class CarDecorator implements Car {
    protected Car car;

    public CarDecorator(Car c){
        this.car = c;
    }

    @Override
    public void assemble() {
        this.car.assemble();
    }
}
class SportsCar extends CarDecorator {
    public SportsCar(Car c) {
        super(c);
    }

    @Override
    public void assemble(){
        super.assemble();
        System.out.print("Adding features of Sports Car.");
    }
}
class LuxuryCar extends CarDecorator {
    public LuxuryCar(Car c) {
        super(c);
    }

    @Override
    public void assemble(){
        super.assemble();
        System.out.print("Adding features of Luxury Car.");
    }
}
 class DecoratorPatternTest {
    public static void main(String[] args) {
        Car sportsCar = new SportsCar(new BasicCar());
        sportsCar.assemble();
        System.out.println("\n-----");

        Car sportsLuxuryCar = new SportsCar(new LuxuryCar(new BasicCar()));
        sportsLuxuryCar.assemble();
    }
}
*************************************************************************************************************************
2.Write a python program to make Categorical values in numeric format for a given dataset
import pandas as pd
cars = pd.read_csv('data.csv')
print(cars.to_string())
ohe_cars = pd.get_dummies(cars[['Car']])
print(ohe_cars.to_string())

*************************************************************************************************************************
3.Create a Simple Web Server using node js
var http = require('http');
http.createServer(function(req,res){
    res.writeHead(200,{'content-type':'text/html'});
    res.write("Server Created");
    console.log("Server Created");
    res.end();
}).listen(8080);
